plugins {
    id 'java-gradle-plugin'
    id 'signing'
    id 'org.jetbrains.kotlin.jvm'
    id 'maven-publish'
    // comment plugin-publish when publish to maven central or local repo, and
    // uncomment apply from: 'maven.gradle'.
    id 'com.gradle.plugin-publish'
}

tasks.register("generateResources") {
    ext {
        propFile = file("$buildDir/generated/version.properties")
    }
    outputs.file propFile
    doLast {
        mkdir propFile.parentFile
        propFile.text = "version=${project.version}"
    }
}

clean {
    doLast {
        println("execute delete local repo task")
        File file = file("repo")
        if (file.exists() && file.isDirectory()) {
            file.deleteDir()
            println("finish delete of local repo")
        }
    }
}

processResources {
    from files(generateResources)
}

repositories {
    mavenCentral()
    google()
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

dependencies {
    implementation("io.github.johnshazhu:lib_annotation:1.0.1")

    implementation("com.android.tools.build:gradle:7.0.4")

    implementation("org.apache.commons:commons-io:1.3.2")

    implementation("commons-codec:commons-codec:1.16.0")

    implementation('org.javassist:javassist:3.29.2-GA')
}

group = "io.github.johnshazhu"
version = "1.0.4"
gradlePlugin {
    website = "https://github.com/johnshazhu/lib_annotation_transform"
    vcsUrl = "https://github.com/johnshazhu/lib_annotation_transform.git"
    plugins {
        annotationProcessPlugin {
            id = 'io.github.johnshazhu.lib_annotation_transform'
            implementationClass = 'com.lib.annotation.gradle.plugin.AnnotationPlugin'
            displayName = 'lib_annotation_transform'
            description = 'A plugin for inject annotation transfrom process'
            tags.set(['lib_annotation', 'transform'])
        }
    }
}
//apply from: 'maven.gradle'